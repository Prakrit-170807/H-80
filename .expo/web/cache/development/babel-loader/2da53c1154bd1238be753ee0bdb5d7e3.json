{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Volumes/Coding/NPM/Home Project/H-80/screens/DailyPic.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport axios from 'axios';\n\nvar DailyPicScreen = function (_Component) {\n  _inherits(DailyPicScreen, _Component);\n\n  var _super = _createSuper(DailyPicScreen);\n\n  function DailyPicScreen(props) {\n    var _this;\n\n    _classCallCheck(this, DailyPicScreen);\n\n    _this = _super.call(this, props);\n\n    _this.getAPOD = function () {\n      axios.get(\"https://api.nasa.gov/planetary/apod?api_key=COGdtQeIWk1mbziFVQgpfK3JfP4dBSAlQg8imDGw\").then(function (response) {\n        _this.setState({\n          apod: response.data\n        });\n      }).catch(function (error) {\n        Alert.alert(error.message);\n      });\n    };\n\n    _this.renderImage = function (url) {\n      React.createElement(Image, {\n        source: {\n          \"uri\": url\n        },\n        style: {\n          width: \"100%\",\n          height: 300,\n          borderRadius: 20,\n          margin: 3\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }\n      });\n\n      renderVideo = function renderVideo() {\n        React.createElement(TouchableOpacity, {\n          style: styles.listContainer,\n          onPress: function onPress() {\n            return Linking.openURL(_this.state.apod.url).catch(function (err) {\n              return console.error(\"Couldn't load page\", err);\n            });\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }\n        }, React.createElement(View, {\n          style: styles.iconContainer,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }\n        }, React.createElement(Image, {\n          source: require(\"../assets/play-video.png\"),\n          style: {\n            width: 50,\n            height: 50\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 21\n          }\n        })));\n      };\n    };\n\n    _this.state = {\n      apod: []\n    };\n    return _this;\n  }\n\n  _createClass(DailyPicScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getAPOD();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var url = this.state.apod.url;\n\n      if (Object.keys(this.state.apod).length === 0) {\n        return React.createElement(View, {\n          style: {\n            flex: 1,\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            backgroundColor: \"#101010\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }\n        }, React.createElement(ActivityIndicator, {\n          size: \"large\",\n          color: \"white\",\n          backgroundColor: \"#101010\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }\n        }));\n      } else {\n        return React.createElement(View, {\n          style: styles.container,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }\n        }, React.createElement(ImageBackground, {\n          source: require(\"../assets/bg1.png\"),\n          style: styles.backgroundImage,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }\n        }, React.createElement(View, {\n          style: {\n            flex: 0.15,\n            justifyContent: \"center\",\n            textAlign: \"center\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }\n        }, React.createElement(Image, {\n          style: styles.routeImage,\n          source: require(\"../assets/DailyPicture.png\"),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }\n        })), React.createElement(ScrollView, {\n          style: styles.listContainer,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }\n        }, React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return Linking.openURL(_this2.state.apod.url).catch(function (err) {\n              return console.error(\"Couldn't load page\", err);\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 29\n          }\n        }, React.createElement(Image, {\n          source: {\n            \"uri\": url\n          },\n          style: {\n            width: \"95%\",\n            height: 300,\n            borderRadius: 38,\n            marginTop: 10,\n            alignSelf: \"center\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 33\n          }\n        })), React.createElement(View, {\n          style: {\n            padding: 20\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }\n        }, React.createElement(Text, {\n          style: styles.titleText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 33\n          }\n        }, this.state.apod.title), React.createElement(Text, {\n          style: styles.explanationText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 33\n          }\n        }, this.state.apod.explanation)))));\n      }\n    }\n  }]);\n\n  return DailyPicScreen;\n}(Component);\n\nexport { DailyPicScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  droidSafeArea: {\n    marginTop: Platform.OS === \"android\" ? StatusBar.currentHeight : 0\n  },\n  backgroundImage: {\n    flex: 1,\n    resizeMode: 'cover'\n  },\n  routeText: {\n    fontSize: 35,\n    fontWeight: \"bold\",\n    color: \"white\",\n    textAlign: 'center'\n  },\n  titleText: {\n    fontSize: 25,\n    fontWeight: \"bold\",\n    color: \"rgba(250, 250, 250, 1)\",\n    textShadowOffset: {\n      width: 2,\n      height: 2\n    },\n    textShadowRadius: 1,\n    textShadowColor: 'rgba(30, 30, 30, 1)'\n  },\n  explanationText: {\n    fontSize: 15,\n    fontWeight: \"bold\",\n    color: \"white\",\n    marginTop: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2\n    },\n    textShadowRadius: 1,\n    textShadowColor: 'rgba(30, 30, 30, 0.8)'\n  },\n  listContainer: {\n    backgroundColor: 'rgba(52, 52, 52, 0.5)',\n    flex: 0.8,\n    marginLeft: 10,\n    marginRight: 10,\n    marginTop: 85,\n    marginBottom: 10,\n    borderRadius: 40,\n    backgroundColor: 'rgba(100, 100, 100, 0.6)'\n  },\n  iconContainer: {\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  routeImage: {\n    marginTop: 180,\n    marginRight: 280,\n    right: 50,\n    bottom: 30,\n    height: \"100%\",\n    width: \"100%\",\n    resizeMode: \"contain\"\n  }\n});","map":{"version":3,"sources":["/Volumes/Coding/NPM/Home Project/H-80/screens/DailyPic.js"],"names":["React","Component","axios","DailyPicScreen","props","getAPOD","get","then","response","setState","apod","data","catch","error","Alert","alert","message","renderImage","url","width","height","borderRadius","margin","renderVideo","styles","listContainer","Linking","openURL","state","err","console","iconContainer","require","Object","keys","length","flex","justifyContent","alignItems","backgroundColor","container","backgroundImage","textAlign","routeImage","marginTop","alignSelf","padding","titleText","title","explanationText","explanation","StyleSheet","create","droidSafeArea","Platform","OS","StatusBar","currentHeight","resizeMode","routeText","fontSize","fontWeight","color","textShadowOffset","textShadowRadius","textShadowColor","marginLeft","marginRight","marginBottom","right","bottom"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Text, View, Image, ImageBackground, TouchableOpacity, StyleSheet, Alert, Platform, StatusBar, SafeAreaView, Linking, ScrollView, ActivityIndicator } from 'react-native';\nimport axios from 'axios';\n\nexport default class DailyPicScreen extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            apod: []\n        };\n    }\n\n    componentDidMount() {\n        this.getAPOD()\n    }\n\n    getAPOD = () => {\n        axios\n            .get(\"https://api.nasa.gov/planetary/apod?api_key=COGdtQeIWk1mbziFVQgpfK3JfP4dBSAlQg8imDGw\")\n            .then(response => {\n                this.setState({ apod: response.data })\n            })\n            .catch(error => {\n                Alert.alert(error.message)\n            })\n    }\n\n    renderImage = (url) => {\n\n        <Image source={{ \"uri\": url }}\n            style={{\n                width: \"100%\", height: 300,\n                borderRadius: 20, margin: 3\n            }}>\n        </Image>\n\n\n        renderVideo = () => {\n            <TouchableOpacity style={styles.listContainer}\n                onPress={() => Linking.openURL(this.state.apod.url).catch(err => console.error(\"Couldn't load page\", err))}\n            >\n                <View style={styles.iconContainer}>\n                    <Image source={require(\"../assets/play-video.png\")} style={{ width: 50, height: 50 }}></Image>\n                </View>\n            </TouchableOpacity >\n        }\n\n    }\n    render() {\n\n        const url = this.state.apod.url\n        if (Object.keys(this.state.apod).length === 0) {\n            return (\n                <View\n                    style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\", backgroundColor:\"#101010\"  }}>\n                    <ActivityIndicator  size=\"large\" color=\"white\"  backgroundColor=\"#101010\" />\n                </View>\n            )\n        }\n        else {\n\n            return (\n                <View style={styles.container}>\n                    <ImageBackground source={require('../assets/bg1.png')} style={styles.backgroundImage}>\n                        <View style={{ flex: 0.15, justifyContent: \"center\", textAlign: \"center\" }}>\n                            <Image style={styles.routeImage} source={require(\"../assets/DailyPicture.png\")}/>\n                        </View>\n                        <ScrollView style={styles.listContainer}>\n                            <TouchableOpacity\n                                onPress={() => Linking.openURL(this.state.apod.url).catch(err => console.error(\"Couldn't load page\", err))}\n                            >\n                                <Image source={{ \"uri\": url }} style={{ width: \"95%\", height: 300, borderRadius: 38, marginTop:10, alignSelf:\"center\", }}></Image>\n                            </TouchableOpacity >\n                            <View style={{ padding: 20 }}>\n                                <Text style={styles.titleText}>{this.state.apod.title}</Text>\n                                <Text style={styles.explanationText}>{this.state.apod.explanation}</Text>\n                            </View>\n                        </ScrollView>\n                    </ImageBackground>\n                </View>\n            )\n        }\n    }\n}\n\n\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    droidSafeArea: {\n        marginTop: Platform.OS === \"android\" ? StatusBar.currentHeight : 0\n    },\n    backgroundImage: {\n        flex: 1,\n        resizeMode: 'cover',\n    },\n    routeText: {\n        fontSize: 35,\n        fontWeight: \"bold\",\n        color: \"white\",\n        textAlign: 'center',\n    },\n    titleText: {\n        fontSize: 25,\n        fontWeight: \"bold\",\n        color: \"rgba(250, 250, 250, 1)\",\n        textShadowOffset: { width: 2, height: 2 },\n        textShadowRadius: 1,\n        textShadowColor: 'rgba(30, 30, 30, 1)',\n    },\n    explanationText: {\n        fontSize: 15,\n        fontWeight: \"bold\",\n        color: \"white\",\n        marginTop: 10,\n        textShadowOffset: { width: 2, height: 2 },\n        textShadowRadius: 1,\n        textShadowColor: 'rgba(30, 30, 30, 0.8)',\n        // margin: 10,\n        // textAlign: 'center'\n    },\n    listContainer: {\n        backgroundColor: 'rgba(52, 52, 52, 0.5)',\n        flex: 0.8,\n        marginLeft: 10,\n        marginRight: 10,\n        marginTop: 85,\n        marginBottom: 10,\n        borderRadius: 40,\n        backgroundColor: 'rgba(100, 100, 100, 0.6)'\n    },\n    iconContainer: {\n        justifyContent: \"center\",\n        alignItems: \"center\",\n\n    },\n    routeImage: {\n        marginTop: 180,\n        marginRight: 280,\n        right: 50,\n        bottom : 30,\n        height: \"100%\",\n        width: \"100%\",\n        resizeMode: \"contain\"\n    }\n});\n\n"]},"metadata":{},"sourceType":"module"}