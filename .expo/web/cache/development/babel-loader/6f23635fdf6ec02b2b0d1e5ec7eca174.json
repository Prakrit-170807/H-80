{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Volumes/Coding/NPM/Home Project/H-80/screens/StarMap.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { WebView } from 'react-native-webview';\n\nvar StarMapScreen = function (_Component) {\n  _inherits(StarMapScreen, _Component);\n\n  var _super = _createSuper(StarMapScreen);\n\n  function StarMapScreen() {\n    var _this;\n\n    _classCallCheck(this, StarMapScreen);\n\n    _this = _super.call(this);\n    _this.state = {\n      longitude: '',\n      latitude: ''\n    };\n    return _this;\n  }\n\n  _createClass(StarMapScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          longitude = _this$state.longitude,\n          latitude = _this$state.latitude;\n      var path = \"https://virtualsky.lco.global/embed/index.html?longitude=\" + longitude + \"&latitude=\" + latitude + \"&constellations=true&constellationlabels=true&showstarlabels=true&gridlines_az=true&live=true&projection=stereo&showdate=false&showposition=false\";\n      return React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }\n      }, React.createElement(ImageBackground, {\n        source: require(\"../assets/bg1.png\"),\n        style: styles.backgroundImage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 0.3,\n          marginTop: 50,\n          alignItems: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }\n      }, React.createElement(Image, {\n        source: require(\"../assets/STARMAP.png\"),\n        style: styles.routeImage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 25\n        }\n      }), React.createElement(TextInput, {\n        style: styles.inputStyle,\n        placeholder: \"Enter your longitude\",\n        placeholderTextColor: \"white\",\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            longitude: text\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 25\n        }\n      }), React.createElement(TextInput, {\n        style: styles.inputStyle1,\n        placeholder: \"Enter your latitude\",\n        placeholderTextColor: \"white\",\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            latitude: text\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }\n      })), React.createElement(WebView, {\n        scalesPageToFit: true,\n        source: {\n          uri: path\n        },\n        style: {\n          marginTop: 10,\n          marginBottom: 0\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }\n      })));\n    }\n  }]);\n\n  return StarMapScreen;\n}(Component);\n\nexport { StarMapScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  backgroundImage: {\n    flex: 1,\n    resizeMode: 'cover'\n  },\n  titleText: {\n    fontSize: 35,\n    fontWeight: \"bold\",\n    color: \"white\",\n    justifyContent: \"center\",\n    alignContent: \"center\"\n  },\n  inputStyle: {\n    position: \"absolute\",\n    height: 50,\n    borderColor: 'gray',\n    borderWidth: 1,\n    borderBottomRightRadius: 0,\n    borderTopRightRadius: 0,\n    borderRadius: 20,\n    marginTop: 40,\n    paddingRight: 10,\n    right: -1,\n    textAlign: 'right',\n    color: 'white',\n    width: 180\n  },\n  inputStyle1: {\n    position: \"absolute\",\n    height: 50,\n    borderColor: 'gray',\n    borderWidth: 1,\n    borderBottomRightRadius: 0,\n    borderTopRightRadius: 0,\n    borderRadius: 20,\n    marginTop: 100,\n    paddingRight: 10,\n    right: -1,\n    top: 10,\n    textAlign: 'right',\n    color: 'white',\n    width: 180\n  },\n  routeImage: {\n    marginRight: 200,\n    bottom: -30,\n    height: \"80%\",\n    width: \"80%\",\n    resizeMode: \"contain\"\n  }\n});","map":{"version":3,"sources":["/Volumes/Coding/NPM/Home Project/H-80/screens/StarMap.js"],"names":["React","Component","WebView","StarMapScreen","state","longitude","latitude","path","flex","require","styles","backgroundImage","marginTop","alignItems","routeImage","inputStyle","text","setState","inputStyle1","uri","marginBottom","StyleSheet","create","container","justifyContent","resizeMode","titleText","fontSize","fontWeight","color","alignContent","position","height","borderColor","borderWidth","borderBottomRightRadius","borderTopRightRadius","borderRadius","paddingRight","right","textAlign","width","top","marginRight","bottom"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Text, View, TextInput, StyleSheet, Platform, StatusBar, SafeAreaView, ImageBackground, Image } from 'react-native';\nimport { WebView } from 'react-native-webview';\n\nexport default class StarMapScreen extends Component {\n    constructor() {\n        super()\n        this.state = {\n            longitude: '',\n            latitude: ''\n        }\n\n    }\n    render() {\n        const { longitude, latitude } = this.state;\n        const path = `https://virtualsky.lco.global/embed/index.html?longitude=${longitude}&latitude=${latitude}&constellations=true&constellationlabels=true&showstarlabels=true&gridlines_az=true&live=true&projection=stereo&showdate=false&showposition=false`\n        return (\n            <View style={{ flex: 1 }}>\n                <ImageBackground source={require(\"../assets/bg1.png\")} style={styles.backgroundImage}>\n                    <View style={{ flex: 0.3, marginTop: 50, alignItems: 'center' }}>\n                        <Image source={require(\"../assets/STARMAP.png\")} style={styles.routeImage} />\n                        <TextInput\n                            style={styles.inputStyle}\n                            placeholder=\"Enter your longitude\"\n                            placeholderTextColor=\"white\"\n\n                            onChangeText={(text) => {\n                                this.setState({\n                                    longitude: text\n                                })\n                            }}\n                        />\n\n                        <TextInput\n                            style={styles.inputStyle1}\n                            placeholder=\"Enter your latitude\"\n                            placeholderTextColor=\"white\"\n                            onChangeText={(text) => {\n                                this.setState({\n                                    latitude: text\n                                })\n                            }}\n                        />\n                    </View>\n                    <WebView\n                        scalesPageToFit={true}\n                        source={{ uri: path }}\n                        style={{ marginTop: 10, marginBottom: 0, }}\n                    />\n                </ImageBackground>\n            </View>\n        );\n    }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    backgroundImage: {\n        flex: 1,\n        resizeMode: 'cover',\n    },\n    titleText: {\n        fontSize: 35,\n        fontWeight: \"bold\",\n        color: \"white\",\n        justifyContent: \"center\",\n        alignContent: \"center\",\n    },\n    inputStyle: {\n        position: \"absolute\",\n        height: 50,\n        borderColor: 'gray',\n        borderWidth: 1,\n        borderBottomRightRadius: 0 , \n        borderTopRightRadius: 0 ,\n        borderRadius: 20,\n        marginTop: 40,\n        paddingRight: 10,\n        right: -1,\n        textAlign: 'right',\n        color: 'white',\n        width: 180\n    },\n    inputStyle1: {\n        position: \"absolute\",\n        height: 50,\n        borderColor: 'gray',\n        borderWidth: 1,\n        borderBottomRightRadius: 0 , \n        borderTopRightRadius: 0 ,\n        borderRadius: 20,\n        marginTop: 100,\n        paddingRight: 10,\n        right: -1,\n        top: 10,\n        textAlign: 'right',\n        color: 'white',\n        width: 180\n    },\n    routeImage: {\n        marginRight: 200,\n        bottom : -30,\n        height: \"80%\",\n        width: \"80%\",\n        resizeMode: \"contain\"\n    }\n})\n"]},"metadata":{},"sourceType":"module"}